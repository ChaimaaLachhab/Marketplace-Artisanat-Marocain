/**
 * This code was generated by Builder.io.
 */
import { Component } from "@angular/core";
import {FormBuilder, FormGroup, ReactiveFormsModule, Validators} from "@angular/forms";
import {AuthenticationService} from "../../core/services/authentication.service";
import {Router} from "@angular/router";
import {JwtService} from "../../core/services/jwt.service";
import {LoginUserDto} from "../../core/dtos/login-user.dto";

@Component({
  selector: "app-login",
  templateUrl: "./login.component.html",
  styleUrls: ["./login.component.css"],
  imports: [
    ReactiveFormsModule
  ],
  standalone: true
})
export class LoginComponent {
  loginForm: FormGroup;

  constructor(
    private fb: FormBuilder,
    private authService: AuthenticationService,
    private router: Router,
    private jwtService : JwtService
  ) {
    this.loginForm = this.fb.group({
      userName: ['', Validators.required],
      password: ['', Validators.required]
    });
  }

  login() {
    if (this.loginForm.valid) {
      const formValues = this.loginForm.value;
      const loginUser: LoginUserDto = {
        userNameOrEmail: formValues.userName,
        password: formValues.password
      };

      this.authService.authenticate(loginUser).subscribe({
        next: (response) => {
          console.log('Login successful:', response);

          const token = response?.token;
          if (token) {
            localStorage.setItem('token', token);
            console.log('Token expires in:', response.expiresIn);

            try {
              const role = this.jwtService.getUserRole(token);

              if (role === 'ADMIN') {
                this.router.navigate(['/admin/dashboard']);
              } else if (role === 'CUSTOMER') {
                this.router.navigate(['/user/dashboard-user']);
              } else if (role === 'ARTISAN') {
                this.router.navigate(['/tech/dashboard-tech']);
              } else {
                console.error('Unknown role:', role);
              }
            } catch (error) {
              console.error('Token decoding failed:', error);
            }
          } else {
            console.error('No token found in the response.');
          }
        },
        error: (err) => {
          console.error('Login failed:', err);
        },
        complete: () => {
          console.log('Login process complete.');
        }
      });
    }
  }
}
